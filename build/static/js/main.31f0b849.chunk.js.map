{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","color","text","onClick","react_default","a","createElement","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","components_Button","Task","task","onDelete","onToggle","concat","reminder","onDoubleClick","id","index_esm","cursor","day","Tasks","tasks","Fragment","map","components_Task","key","AddTask","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setDay","_useState5","_useState6","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","components_Header","components_AddTask","Math","floor","random","newTask","objectSpread","toConsumableArray","length","components_Tasks","filter","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.31f0b849.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button onClick={onClick}\n     style={{ backgroundColor: color}}\n     className='btn'\n    >\n        {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  return (\n    <header className='header'>\n      <h1>{title}</h1>\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import React from 'react';\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n      <h3>\n        {task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} \n        onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  )\n}\n\nexport default Task\n","import React from 'react';\nimport Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => (\n      <Task key={task.id} task={task}\n      onDelete = {onDelete} \n      onToggle={onToggle}/>\n      ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!text) {\n      alert('Please add a task')\n      return\n    }\n\n    onAdd({ text, day, reminder })\n\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='text'\n          placeholder='Add Day & Time'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Set Reminder</label>\n        <input\n          type='checkbox'\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type='submit' value='Save Task' className='btn btn-block' />\n    </form>\n  )\n}\n\nexport default AddTask","import React from 'react';\nimport { useState } from 'react'\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState ([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    },\n])\n\n// Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n//Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? { ...task, reminder: !task.reminder } : task\n    )\n  )\n}\n\n  return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} \n      onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}